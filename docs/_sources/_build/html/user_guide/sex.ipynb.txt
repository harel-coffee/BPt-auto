{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Predict Sex\n",
    "\n",
    "This notebook goes through a simple binary classification example, explaining general library functionality along the way.\n",
    "Within this notebook we make use of data downloaded from Release 2.0.1 of the the ABCD Study (https://abcdstudy.org/).\n",
    "This dataset is openly available to researchers (after signing a data use agreement) and is particularly well suited\n",
    "towards performing neuroimaging based ML given the large sample size of the study.\n",
    "\n",
    "Within this notebook we will be performing binary classification predicting sex assigned at birth from tabular ROI structural MRI data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import BPt as bp\n",
    "import pandas as pd\n",
    "import os\n",
    "\n",
    "from warnings import simplefilter\n",
    "from sklearn.exceptions import ConvergenceWarning\n",
    "simplefilter(\"ignore\", category=ConvergenceWarning)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_from_rds(names, eventname='baseline_year_1_arm_1'):\n",
    "    \n",
    "    data = pd.read_csv('data/nda_rds_201.csv',\n",
    "                       usecols=['src_subject_id', 'eventname'] + names,\n",
    "                       na_values=['777', 999, '999', 777])\n",
    "    \n",
    "    data = data.loc[data[data['eventname'] == eventname].index]\n",
    "    data = data.set_index('src_subject_id')\n",
    "    data = data.drop('eventname', axis=1)\n",
    "    \n",
    "    # Obsificate subject ID for public example\n",
    "    data.index = list(range(len(data)))\n",
    "    \n",
    "    # Return as pandas DataFrame cast to BPt Dataset\n",
    "    return bp.Dataset(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# This way we can look at all column avaliable\n",
    "all_cols = list(pd.read_csv('data/nda_rds_201.csv', nrows=0))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can search through all column to find which columns we actually want to load. We will start with the brain imaging features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['smri_thick_cort.destrieux_g.and.s.frontomargin.lh',\n",
       " 'smri_thick_cort.destrieux_g.and.s.occipital.inf.lh',\n",
       " 'smri_thick_cort.destrieux_g.and.s.paracentral.lh',\n",
       " 'smri_thick_cort.destrieux_g.and.s.subcentral.lh',\n",
       " 'smri_thick_cort.destrieux_g.and.s.transv.frontopol.lh',\n",
       " 'smri_thick_cort.destrieux_g.and.s.cingul.ant.lh',\n",
       " 'smri_thick_cort.destrieux_g.and.s.cingul.mid.ant.lh',\n",
       " 'smri_thick_cort.destrieux_g.and.s.cingul.mid.post.lh',\n",
       " 'smri_thick_cort.destrieux_g.cingul.post.dorsal.lh',\n",
       " 'smri_thick_cort.destrieux_g.cingul.post.ventral.lh']"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feat_keys = {'thick': 'smri_thick_cort.destrieux_g.',\n",
    "             'sulc': 'smri_sulc_cort.destrieux_g.',\n",
    "             'area': 'smri_area_cort.destrieux_g.',\n",
    "             'subcort': 'smri_vol_subcort.aseg_'}\n",
    "\n",
    "feat_cols = {key: [c for c in all_cols if feat_keys[key] in c] for key in feat_keys}\n",
    "all_cols = sum(feat_cols.values(), [])\n",
    "\n",
    "# For example\n",
    "feat_cols['thick'][:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We also need our target variable, in this case sex."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "target = 'sex'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"float: left; padding: 10px;\">\n",
       "        <h3>Data</h3><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sex</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.ant.lh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.ant.rh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.mid.ant.lh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.mid.ant.rh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.mid.post.lh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.mid.post.rh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.frontomargin.lh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.frontomargin.rh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.occipital.inf.lh</th>\n",
       "      <th>...</th>\n",
       "      <th>smri_vol_subcort.aseg_subcorticalgrayvolume</th>\n",
       "      <th>smri_vol_subcort.aseg_supratentorialvolume</th>\n",
       "      <th>smri_vol_subcort.aseg_thalamus.proper.lh</th>\n",
       "      <th>smri_vol_subcort.aseg_thalamus.proper.rh</th>\n",
       "      <th>smri_vol_subcort.aseg_ventraldc.lh</th>\n",
       "      <th>smri_vol_subcort.aseg_ventraldc.rh</th>\n",
       "      <th>smri_vol_subcort.aseg_wholebrain</th>\n",
       "      <th>smri_vol_subcort.aseg_wm.hypointensities</th>\n",
       "      <th>smri_vol_subcort.aseg_wm.hypointensities.lh</th>\n",
       "      <th>smri_vol_subcort.aseg_wm.hypointensities.rh</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>F</td>\n",
       "      <td>1540.0</td>\n",
       "      <td>1921.0</td>\n",
       "      <td>1237.0</td>\n",
       "      <td>1211.0</td>\n",
       "      <td>939.0</td>\n",
       "      <td>1022.0</td>\n",
       "      <td>872.0</td>\n",
       "      <td>596.0</td>\n",
       "      <td>820.0</td>\n",
       "      <td>...</td>\n",
       "      <td>54112.0</td>\n",
       "      <td>9.738411e+05</td>\n",
       "      <td>6980.4</td>\n",
       "      <td>6806.6</td>\n",
       "      <td>3448.1</td>\n",
       "      <td>3372.7</td>\n",
       "      <td>1.099494e+06</td>\n",
       "      <td>2201.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>F</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M</td>\n",
       "      <td>2108.0</td>\n",
       "      <td>2583.0</td>\n",
       "      <td>1289.0</td>\n",
       "      <td>1295.0</td>\n",
       "      <td>1066.0</td>\n",
       "      <td>1328.0</td>\n",
       "      <td>907.0</td>\n",
       "      <td>843.0</td>\n",
       "      <td>1571.0</td>\n",
       "      <td>...</td>\n",
       "      <td>71188.0</td>\n",
       "      <td>1.290405e+06</td>\n",
       "      <td>9091.3</td>\n",
       "      <td>8105.3</td>\n",
       "      <td>5058.5</td>\n",
       "      <td>5261.6</td>\n",
       "      <td>1.444690e+06</td>\n",
       "      <td>1254.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M</td>\n",
       "      <td>2196.0</td>\n",
       "      <td>2266.0</td>\n",
       "      <td>1012.0</td>\n",
       "      <td>1459.0</td>\n",
       "      <td>1326.0</td>\n",
       "      <td>1398.0</td>\n",
       "      <td>944.0</td>\n",
       "      <td>924.0</td>\n",
       "      <td>1209.0</td>\n",
       "      <td>...</td>\n",
       "      <td>61985.0</td>\n",
       "      <td>1.283405e+06</td>\n",
       "      <td>7470.7</td>\n",
       "      <td>7278.4</td>\n",
       "      <td>3924.8</td>\n",
       "      <td>3983.6</td>\n",
       "      <td>1.421171e+06</td>\n",
       "      <td>950.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M</td>\n",
       "      <td>1732.0</td>\n",
       "      <td>1936.0</td>\n",
       "      <td>1024.0</td>\n",
       "      <td>916.0</td>\n",
       "      <td>900.0</td>\n",
       "      <td>1002.0</td>\n",
       "      <td>863.0</td>\n",
       "      <td>730.0</td>\n",
       "      <td>969.0</td>\n",
       "      <td>...</td>\n",
       "      <td>61855.0</td>\n",
       "      <td>1.072113e+06</td>\n",
       "      <td>8152.9</td>\n",
       "      <td>7436.8</td>\n",
       "      <td>4085.2</td>\n",
       "      <td>4129.3</td>\n",
       "      <td>1.186497e+06</td>\n",
       "      <td>789.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11870</th>\n",
       "      <td>M</td>\n",
       "      <td>1583.0</td>\n",
       "      <td>1821.0</td>\n",
       "      <td>730.0</td>\n",
       "      <td>1040.0</td>\n",
       "      <td>709.0</td>\n",
       "      <td>872.0</td>\n",
       "      <td>938.0</td>\n",
       "      <td>745.0</td>\n",
       "      <td>789.0</td>\n",
       "      <td>...</td>\n",
       "      <td>59550.0</td>\n",
       "      <td>1.001272e+06</td>\n",
       "      <td>7993.5</td>\n",
       "      <td>7239.5</td>\n",
       "      <td>3899.4</td>\n",
       "      <td>4024.6</td>\n",
       "      <td>1.139532e+06</td>\n",
       "      <td>651.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11871</th>\n",
       "      <td>F</td>\n",
       "      <td>1603.0</td>\n",
       "      <td>1841.0</td>\n",
       "      <td>899.0</td>\n",
       "      <td>1091.0</td>\n",
       "      <td>990.0</td>\n",
       "      <td>995.0</td>\n",
       "      <td>809.0</td>\n",
       "      <td>666.0</td>\n",
       "      <td>1155.0</td>\n",
       "      <td>...</td>\n",
       "      <td>61090.0</td>\n",
       "      <td>9.897016e+05</td>\n",
       "      <td>7113.5</td>\n",
       "      <td>6835.3</td>\n",
       "      <td>4029.6</td>\n",
       "      <td>3826.0</td>\n",
       "      <td>1.134203e+06</td>\n",
       "      <td>2304.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11872</th>\n",
       "      <td>F</td>\n",
       "      <td>1862.0</td>\n",
       "      <td>2245.0</td>\n",
       "      <td>1406.0</td>\n",
       "      <td>1502.0</td>\n",
       "      <td>882.0</td>\n",
       "      <td>1279.0</td>\n",
       "      <td>1105.0</td>\n",
       "      <td>1015.0</td>\n",
       "      <td>1256.0</td>\n",
       "      <td>...</td>\n",
       "      <td>64413.0</td>\n",
       "      <td>1.172208e+06</td>\n",
       "      <td>8123.0</td>\n",
       "      <td>7947.6</td>\n",
       "      <td>3893.0</td>\n",
       "      <td>4428.5</td>\n",
       "      <td>1.301402e+06</td>\n",
       "      <td>1654.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11873</th>\n",
       "      <td>F</td>\n",
       "      <td>1803.0</td>\n",
       "      <td>1888.0</td>\n",
       "      <td>967.0</td>\n",
       "      <td>1101.0</td>\n",
       "      <td>866.0</td>\n",
       "      <td>1128.0</td>\n",
       "      <td>1040.0</td>\n",
       "      <td>642.0</td>\n",
       "      <td>939.0</td>\n",
       "      <td>...</td>\n",
       "      <td>55505.0</td>\n",
       "      <td>1.040864e+06</td>\n",
       "      <td>6923.8</td>\n",
       "      <td>6459.8</td>\n",
       "      <td>3502.5</td>\n",
       "      <td>3674.0</td>\n",
       "      <td>1.150473e+06</td>\n",
       "      <td>1209.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11874</th>\n",
       "      <td>F</td>\n",
       "      <td>1957.0</td>\n",
       "      <td>1998.0</td>\n",
       "      <td>1142.0</td>\n",
       "      <td>1102.0</td>\n",
       "      <td>1144.0</td>\n",
       "      <td>1130.0</td>\n",
       "      <td>884.0</td>\n",
       "      <td>638.0</td>\n",
       "      <td>1122.0</td>\n",
       "      <td>...</td>\n",
       "      <td>59816.0</td>\n",
       "      <td>1.079887e+06</td>\n",
       "      <td>7665.4</td>\n",
       "      <td>5959.4</td>\n",
       "      <td>3736.0</td>\n",
       "      <td>4060.7</td>\n",
       "      <td>1.214126e+06</td>\n",
       "      <td>1321.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11875 rows × 273 columns</p>\n",
       "</div></div>\n"
      ],
      "text/plain": [
       "       smri_thick_cort.destrieux_g.and.s.frontomargin.lh  \\\n",
       "0                                                  2.643   \n",
       "1                                                    NaN   \n",
       "2                                                  2.798   \n",
       "3                                                  2.570   \n",
       "4                                                  2.589   \n",
       "...                                                  ...   \n",
       "11870                                              2.604   \n",
       "11871                                              2.665   \n",
       "11872                                              2.517   \n",
       "11873                                              2.806   \n",
       "11874                                              2.817   \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.occipital.inf.lh  \\\n",
       "0                                                  2.597    \n",
       "1                                                    NaN    \n",
       "2                                                  2.635    \n",
       "3                                                  3.008    \n",
       "4                                                  2.495    \n",
       "...                                                  ...    \n",
       "11870                                              2.839    \n",
       "11871                                              2.915    \n",
       "11872                                              2.743    \n",
       "11873                                              2.835    \n",
       "11874                                              2.267    \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.paracentral.lh  \\\n",
       "0                                                 2.682   \n",
       "1                                                   NaN   \n",
       "2                                                 2.620   \n",
       "3                                                 2.771   \n",
       "4                                                 2.732   \n",
       "...                                                 ...   \n",
       "11870                                             2.642   \n",
       "11871                                             2.661   \n",
       "11872                                             2.607   \n",
       "11873                                             2.678   \n",
       "11874                                             2.639   \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.subcentral.lh  \\\n",
       "0                                                3.016   \n",
       "1                                                  NaN   \n",
       "2                                                2.963   \n",
       "3                                                3.116   \n",
       "4                                                2.982   \n",
       "...                                                ...   \n",
       "11870                                            3.017   \n",
       "11871                                            3.114   \n",
       "11872                                            3.210   \n",
       "11873                                            3.344   \n",
       "11874                                            2.805   \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.transv.frontopol.lh  \\\n",
       "0                                                  2.776       \n",
       "1                                                    NaN       \n",
       "2                                                  3.038       \n",
       "3                                                  2.753       \n",
       "4                                                  2.979       \n",
       "...                                                  ...       \n",
       "11870                                              2.990       \n",
       "11871                                              2.968       \n",
       "11872                                              2.847       \n",
       "11873                                              2.975       \n",
       "11874                                              3.041       \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.cingul.ant.lh  \\\n",
       "0                                                3.012   \n",
       "1                                                  NaN   \n",
       "2                                                2.948   \n",
       "3                                                3.137   \n",
       "4                                                2.953   \n",
       "...                                                ...   \n",
       "11870                                            3.119   \n",
       "11871                                            3.167   \n",
       "11872                                            2.954   \n",
       "11873                                            3.134   \n",
       "11874                                            2.867   \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.cingul.mid.ant.lh  \\\n",
       "0                                                  2.894     \n",
       "1                                                    NaN     \n",
       "2                                                  2.966     \n",
       "3                                                  3.222     \n",
       "4                                                  2.732     \n",
       "...                                                  ...     \n",
       "11870                                              3.014     \n",
       "11871                                              3.058     \n",
       "11872                                              2.965     \n",
       "11873                                              3.425     \n",
       "11874                                              2.906     \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.cingul.mid.post.lh  \\\n",
       "0                                                  2.874      \n",
       "1                                                    NaN      \n",
       "2                                                  2.728      \n",
       "3                                                  3.062      \n",
       "4                                                  2.819      \n",
       "...                                                  ...      \n",
       "11870                                              2.871      \n",
       "11871                                              2.976      \n",
       "11872                                              2.846      \n",
       "11873                                              3.251      \n",
       "11874                                              3.049      \n",
       "\n",
       "       smri_thick_cort.destrieux_g.cingul.post.dorsal.lh  \\\n",
       "0                                                  2.865   \n",
       "1                                                    NaN   \n",
       "2                                                  3.263   \n",
       "3                                                  3.315   \n",
       "4                                                  2.908   \n",
       "...                                                  ...   \n",
       "11870                                              3.240   \n",
       "11871                                              3.355   \n",
       "11872                                              3.211   \n",
       "11873                                              3.288   \n",
       "11874                                              3.440   \n",
       "\n",
       "       smri_thick_cort.destrieux_g.cingul.post.ventral.lh  ...  \\\n",
       "0                                                  2.350   ...   \n",
       "1                                                    NaN   ...   \n",
       "2                                                  1.882   ...   \n",
       "3                                                  3.065   ...   \n",
       "4                                                  2.967   ...   \n",
       "...                                                  ...   ...   \n",
       "11870                                              2.254   ...   \n",
       "11871                                              2.168   ...   \n",
       "11872                                              2.741   ...   \n",
       "11873                                              2.535   ...   \n",
       "11874                                              2.123   ...   \n",
       "\n",
       "       smri_vol_subcort.aseg_cc.central  \\\n",
       "0                                 403.0   \n",
       "1                                   NaN   \n",
       "2                                 371.1   \n",
       "3                                 357.6   \n",
       "4                                 414.5   \n",
       "...                                 ...   \n",
       "11870                             338.0   \n",
       "11871                             429.8   \n",
       "11872                             436.3   \n",
       "11873                             419.5   \n",
       "11874                             462.1   \n",
       "\n",
       "       smri_vol_subcort.aseg_cc.mid.anterior  \\\n",
       "0                                      396.9   \n",
       "1                                        NaN   \n",
       "2                                      336.7   \n",
       "3                                      432.3   \n",
       "4                                      398.6   \n",
       "...                                      ...   \n",
       "11870                                  366.9   \n",
       "11871                                  367.8   \n",
       "11872                                  472.6   \n",
       "11873                                  424.1   \n",
       "11874                                  417.5   \n",
       "\n",
       "       smri_vol_subcort.aseg_cc.anterior  smri_vol_subcort.aseg_wholebrain  \\\n",
       "0                                  546.9                      1.099494e+06   \n",
       "1                                    NaN                               NaN   \n",
       "2                                  684.0                      1.444690e+06   \n",
       "3                                  720.6                      1.421171e+06   \n",
       "4                                  824.5                      1.186497e+06   \n",
       "...                                  ...                               ...   \n",
       "11870                              761.9                      1.139532e+06   \n",
       "11871                              609.3                      1.134203e+06   \n",
       "11872                              855.6                      1.301402e+06   \n",
       "11873                              691.2                      1.150473e+06   \n",
       "11874                              863.2                      1.214126e+06   \n",
       "\n",
       "       smri_vol_subcort.aseg_latventricles  \\\n",
       "0                                   4693.2   \n",
       "1                                      NaN   \n",
       "2                                  13426.2   \n",
       "3                                   8375.3   \n",
       "4                                  19138.9   \n",
       "...                                    ...   \n",
       "11870                              11129.1   \n",
       "11871                               2855.1   \n",
       "11872                               8278.4   \n",
       "11873                               6483.5   \n",
       "11874                               9234.5   \n",
       "\n",
       "       smri_vol_subcort.aseg_allventricles  \\\n",
       "0                                   6299.4   \n",
       "1                                      NaN   \n",
       "2                                  18810.3   \n",
       "3                                  11828.6   \n",
       "4                                  21191.9   \n",
       "...                                    ...   \n",
       "11870                              14259.9   \n",
       "11871                               4925.1   \n",
       "11872                              10434.1   \n",
       "11873                               8978.0   \n",
       "11874                              11169.3   \n",
       "\n",
       "       smri_vol_subcort.aseg_intracranialvolume  \\\n",
       "0                                  1.354788e+06   \n",
       "1                                           NaN   \n",
       "2                                  1.703982e+06   \n",
       "3                                  1.679526e+06   \n",
       "4                                  1.561216e+06   \n",
       "...                                         ...   \n",
       "11870                              1.480336e+06   \n",
       "11871                              1.470497e+06   \n",
       "11872                              1.455727e+06   \n",
       "11873                              1.480286e+06   \n",
       "11874                              1.500072e+06   \n",
       "\n",
       "       smri_vol_subcort.aseg_supratentorialvolume  \\\n",
       "0                                    9.738411e+05   \n",
       "1                                             NaN   \n",
       "2                                    1.290405e+06   \n",
       "3                                    1.283405e+06   \n",
       "4                                    1.072113e+06   \n",
       "...                                           ...   \n",
       "11870                                1.001272e+06   \n",
       "11871                                9.897016e+05   \n",
       "11872                                1.172208e+06   \n",
       "11873                                1.040864e+06   \n",
       "11874                                1.079887e+06   \n",
       "\n",
       "       smri_vol_subcort.aseg_subcorticalgrayvolume  sex  \n",
       "0                                          54112.0    F  \n",
       "1                                              NaN    F  \n",
       "2                                          71188.0    M  \n",
       "3                                          61985.0    M  \n",
       "4                                          61855.0    M  \n",
       "...                                            ...  ...  \n",
       "11870                                      59550.0    M  \n",
       "11871                                      61090.0    F  \n",
       "11872                                      64413.0    F  \n",
       "11873                                      55505.0    F  \n",
       "11874                                      59816.0    F  \n",
       "\n",
       "[11875 rows x 273 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = load_from_rds(all_cols + [target])\n",
    "data.verbose = 1\n",
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next we need to tell the dataset a few things about sex, namely that it is a binary variable, and that it is our target variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"float: left; padding: 10px;\">\n",
       "        <h3>Target</h3><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sex</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11870</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11871</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11872</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11873</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11874</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11875 rows × 1 columns</p>\n",
       "</div></div>\n"
      ],
      "text/plain": [
       "      sex\n",
       "0       0\n",
       "1       0\n",
       "2       1\n",
       "3       1\n",
       "4       1\n",
       "...    ..\n",
       "11870   1\n",
       "11871   0\n",
       "11872   0\n",
       "11873   0\n",
       "11874   0\n",
       "\n",
       "[11875 rows x 1 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.to_binary('sex', inplace=True)\n",
    "data.set_target('sex', inplace=True)\n",
    "data['target']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's look at some NaN info"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loaded NaN Info:\n",
      "There are: 94062 total missing values\n",
      "223 columns found with 341 missing values (column name overlap: ['cort.', 'smri_'])\n",
      "8 columns found with 342 missing values (column name overlap: ['cort.', 'smri_'])\n",
      "5 columns found with 343 missing values (column name overlap: ['cort.', 'smri_', 'area'])\n",
      "3 columns found with 384 missing values (column name overlap: ['smri_area_cort.destrieux_g.'])\n",
      "3 columns found with 346 missing values (column name overlap: ['cort.', 'smri_'])\n",
      "3 columns found with 453 missing values (column name overlap: ['smri_vol_subcort.aseg_', 'le'])\n",
      "2 columns found with 387 missing values (column name overlap: ['smri_area_cort.destrieux_g.and.s.', 'in'])\n",
      "2 columns found with 379 missing values (column name overlap: ['smri_area_cort.destrieux_g.', '.lh', 'an', '.s'])\n",
      "2 columns found with 344 missing values (column name overlap: ['smri_area_cort.destrieux_g.'])\n",
      "2 columns found with 352 missing values (column name overlap: ['smri_area_cort.destrieux_g.', 'temp.', '.lat'])\n",
      "2 columns found with 361 missing values (column name overlap: ['smri_area_cort.destrieux_g.and.s.', 'ci', 'l.'])\n",
      "\n"
     ]
    }
   ],
   "source": [
    "data.nan_info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What happens now if we drop any subjects with more than 1% of their loaded columns with NaN values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting NaN threshold to: 2.73\n",
      "Dropped 453 Rows\n",
      "Loaded NaN Info:\n",
      "There are: 961 total missing values\n",
      "8 columns found with 1 missing values (column name overlap: ['cort.', 'smri_'])\n",
      "5 columns found with 2 missing values (column name overlap: ['cort.', 'smri_', 'area'])\n",
      "4 columns found with 5 missing values (column name overlap: [])\n",
      "2 columns found with 49 missing values (column name overlap: ['smri_area_cort.destrieux_g.', 'ra', '.t', 'd.'])\n",
      "2 columns found with 46 missing values (column name overlap: ['smri_area_cort.destrieux_g.and.s.', 'in'])\n",
      "2 columns found with 3 missing values (column name overlap: ['smri_area_cort.destrieux_g.'])\n",
      "2 columns found with 43 missing values (column name overlap: ['smri_area_cort.destrieux_g.and.s.', '.rh', 'al'])\n",
      "2 columns found with 11 missing values (column name overlap: ['smri_area_cort.destrieux_g.', 'temp.', '.lat'])\n",
      "\n"
     ]
    }
   ],
   "source": [
    "data = data.drop_subjects_by_nan(threshold=.01)\n",
    "data.nan_info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "That greatly reduces the number of remaining missing values we have. Next, let's consider outlier filtering as..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "smri_thick_cort.destrieux_g.front.middle.rh          -1.475994\n",
       "smri_thick_cort.destrieux_g.temporal.middle.lh       -1.306818\n",
       "smri_thick_cort.destrieux_g.precentral.rh            -1.266633\n",
       "smri_thick_cort.destrieux_g.pariet.inf.angular.rh    -1.260234\n",
       "smri_thick_cort.destrieux_g.temporal.middle.rh       -1.222911\n",
       "                                                       ...    \n",
       "smri_vol_subcort.aseg_lateral.ventricle.lh            4.053670\n",
       "smri_vol_subcort.aseg_lateral.ventricle.rh            4.403390\n",
       "smri_area_cort.destrieux_g.cingul.post.ventral.lh     4.897899\n",
       "smri_area_cort.destrieux_g.cingul.post.ventral.rh     4.898569\n",
       "smri_vol_subcort.aseg_wm.hypointensities             16.250108\n",
       "Length: 272, dtype: float64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.skew().sort_values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dropped 3 Columns\n"
     ]
    }
   ],
   "source": [
    "# We don't even care about this\n",
    "data = data.drop_cols(exclusions='aseg_wm.hypointensities')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dropped 61 Rows\n"
     ]
    }
   ],
   "source": [
    "data = data.filter_outliers_by_std(n_std=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sex: 11356 rows (5 NaN)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data.plot('target')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note we have some missing data in the target variable, we can drop these."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dropped 5 Rows\n"
     ]
    }
   ],
   "source": [
    "data = data.drop_nan_subjects('target')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's split our data in a train test split."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Performing test split on: 11356 subjects.\n",
      "random_state: 2\n",
      "Test split size: 0.2\n",
      "\n",
      "Performed train/test split\n",
      "Train size: 9084\n",
      "Test size:  2272\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"float: left; padding: 10px;\">\n",
       "        <h3>Data</h3><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.ant.lh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.ant.rh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.mid.ant.lh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.mid.ant.rh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.mid.post.lh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.cingul.mid.post.rh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.frontomargin.lh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.frontomargin.rh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.occipital.inf.lh</th>\n",
       "      <th>smri_area_cort.destrieux_g.and.s.occipital.inf.rh</th>\n",
       "      <th>...</th>\n",
       "      <th>smri_vol_subcort.aseg_pallidum.rh</th>\n",
       "      <th>smri_vol_subcort.aseg_putamen.lh</th>\n",
       "      <th>smri_vol_subcort.aseg_putamen.rh</th>\n",
       "      <th>smri_vol_subcort.aseg_subcorticalgrayvolume</th>\n",
       "      <th>smri_vol_subcort.aseg_supratentorialvolume</th>\n",
       "      <th>smri_vol_subcort.aseg_thalamus.proper.lh</th>\n",
       "      <th>smri_vol_subcort.aseg_thalamus.proper.rh</th>\n",
       "      <th>smri_vol_subcort.aseg_ventraldc.lh</th>\n",
       "      <th>smri_vol_subcort.aseg_ventraldc.rh</th>\n",
       "      <th>smri_vol_subcort.aseg_wholebrain</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1540.0</td>\n",
       "      <td>1921.0</td>\n",
       "      <td>1237.0</td>\n",
       "      <td>1211.0</td>\n",
       "      <td>939.0</td>\n",
       "      <td>1022.0</td>\n",
       "      <td>872.0</td>\n",
       "      <td>596.0</td>\n",
       "      <td>820.0</td>\n",
       "      <td>839.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1392.5</td>\n",
       "      <td>5471.6</td>\n",
       "      <td>5002.9</td>\n",
       "      <td>54112.0</td>\n",
       "      <td>9.738411e+05</td>\n",
       "      <td>6980.4</td>\n",
       "      <td>6806.6</td>\n",
       "      <td>3448.1</td>\n",
       "      <td>3372.7</td>\n",
       "      <td>1.099494e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2108.0</td>\n",
       "      <td>2583.0</td>\n",
       "      <td>1289.0</td>\n",
       "      <td>1295.0</td>\n",
       "      <td>1066.0</td>\n",
       "      <td>1328.0</td>\n",
       "      <td>907.0</td>\n",
       "      <td>843.0</td>\n",
       "      <td>1571.0</td>\n",
       "      <td>1056.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2102.4</td>\n",
       "      <td>6520.7</td>\n",
       "      <td>6929.8</td>\n",
       "      <td>71188.0</td>\n",
       "      <td>1.290405e+06</td>\n",
       "      <td>9091.3</td>\n",
       "      <td>8105.3</td>\n",
       "      <td>5058.5</td>\n",
       "      <td>5261.6</td>\n",
       "      <td>1.444690e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1732.0</td>\n",
       "      <td>1936.0</td>\n",
       "      <td>1024.0</td>\n",
       "      <td>916.0</td>\n",
       "      <td>900.0</td>\n",
       "      <td>1002.0</td>\n",
       "      <td>863.0</td>\n",
       "      <td>730.0</td>\n",
       "      <td>969.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1715.1</td>\n",
       "      <td>6078.6</td>\n",
       "      <td>6013.7</td>\n",
       "      <td>61855.0</td>\n",
       "      <td>1.072113e+06</td>\n",
       "      <td>8152.9</td>\n",
       "      <td>7436.8</td>\n",
       "      <td>4085.2</td>\n",
       "      <td>4129.3</td>\n",
       "      <td>1.186497e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1346.0</td>\n",
       "      <td>1855.0</td>\n",
       "      <td>832.0</td>\n",
       "      <td>1101.0</td>\n",
       "      <td>855.0</td>\n",
       "      <td>930.0</td>\n",
       "      <td>722.0</td>\n",
       "      <td>769.0</td>\n",
       "      <td>1249.0</td>\n",
       "      <td>789.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1466.2</td>\n",
       "      <td>5281.3</td>\n",
       "      <td>4990.4</td>\n",
       "      <td>52886.0</td>\n",
       "      <td>9.367869e+05</td>\n",
       "      <td>6385.2</td>\n",
       "      <td>5843.4</td>\n",
       "      <td>3557.2</td>\n",
       "      <td>3420.8</td>\n",
       "      <td>1.047860e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1537.0</td>\n",
       "      <td>1986.0</td>\n",
       "      <td>1151.0</td>\n",
       "      <td>1178.0</td>\n",
       "      <td>1182.0</td>\n",
       "      <td>1389.0</td>\n",
       "      <td>839.0</td>\n",
       "      <td>678.0</td>\n",
       "      <td>1250.0</td>\n",
       "      <td>1207.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1859.0</td>\n",
       "      <td>6599.7</td>\n",
       "      <td>6317.0</td>\n",
       "      <td>65182.0</td>\n",
       "      <td>1.135326e+06</td>\n",
       "      <td>8437.8</td>\n",
       "      <td>8259.8</td>\n",
       "      <td>3734.3</td>\n",
       "      <td>4159.9</td>\n",
       "      <td>1.263524e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11870</th>\n",
       "      <td>1583.0</td>\n",
       "      <td>1821.0</td>\n",
       "      <td>730.0</td>\n",
       "      <td>1040.0</td>\n",
       "      <td>709.0</td>\n",
       "      <td>872.0</td>\n",
       "      <td>938.0</td>\n",
       "      <td>745.0</td>\n",
       "      <td>789.0</td>\n",
       "      <td>825.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1610.9</td>\n",
       "      <td>6090.9</td>\n",
       "      <td>5444.8</td>\n",
       "      <td>59550.0</td>\n",
       "      <td>1.001272e+06</td>\n",
       "      <td>7993.5</td>\n",
       "      <td>7239.5</td>\n",
       "      <td>3899.4</td>\n",
       "      <td>4024.6</td>\n",
       "      <td>1.139532e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11871</th>\n",
       "      <td>1603.0</td>\n",
       "      <td>1841.0</td>\n",
       "      <td>899.0</td>\n",
       "      <td>1091.0</td>\n",
       "      <td>990.0</td>\n",
       "      <td>995.0</td>\n",
       "      <td>809.0</td>\n",
       "      <td>666.0</td>\n",
       "      <td>1155.0</td>\n",
       "      <td>844.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1664.6</td>\n",
       "      <td>7042.9</td>\n",
       "      <td>6654.0</td>\n",
       "      <td>61090.0</td>\n",
       "      <td>9.897016e+05</td>\n",
       "      <td>7113.5</td>\n",
       "      <td>6835.3</td>\n",
       "      <td>4029.6</td>\n",
       "      <td>3826.0</td>\n",
       "      <td>1.134203e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11872</th>\n",
       "      <td>1862.0</td>\n",
       "      <td>2245.0</td>\n",
       "      <td>1406.0</td>\n",
       "      <td>1502.0</td>\n",
       "      <td>882.0</td>\n",
       "      <td>1279.0</td>\n",
       "      <td>1105.0</td>\n",
       "      <td>1015.0</td>\n",
       "      <td>1256.0</td>\n",
       "      <td>960.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1856.8</td>\n",
       "      <td>6331.3</td>\n",
       "      <td>6366.1</td>\n",
       "      <td>64413.0</td>\n",
       "      <td>1.172208e+06</td>\n",
       "      <td>8123.0</td>\n",
       "      <td>7947.6</td>\n",
       "      <td>3893.0</td>\n",
       "      <td>4428.5</td>\n",
       "      <td>1.301402e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11873</th>\n",
       "      <td>1803.0</td>\n",
       "      <td>1888.0</td>\n",
       "      <td>967.0</td>\n",
       "      <td>1101.0</td>\n",
       "      <td>866.0</td>\n",
       "      <td>1128.0</td>\n",
       "      <td>1040.0</td>\n",
       "      <td>642.0</td>\n",
       "      <td>939.0</td>\n",
       "      <td>892.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1470.9</td>\n",
       "      <td>5730.4</td>\n",
       "      <td>5469.3</td>\n",
       "      <td>55505.0</td>\n",
       "      <td>1.040864e+06</td>\n",
       "      <td>6923.8</td>\n",
       "      <td>6459.8</td>\n",
       "      <td>3502.5</td>\n",
       "      <td>3674.0</td>\n",
       "      <td>1.150473e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11874</th>\n",
       "      <td>1957.0</td>\n",
       "      <td>1998.0</td>\n",
       "      <td>1142.0</td>\n",
       "      <td>1102.0</td>\n",
       "      <td>1144.0</td>\n",
       "      <td>1130.0</td>\n",
       "      <td>884.0</td>\n",
       "      <td>638.0</td>\n",
       "      <td>1122.0</td>\n",
       "      <td>819.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1586.3</td>\n",
       "      <td>6171.0</td>\n",
       "      <td>5573.6</td>\n",
       "      <td>59816.0</td>\n",
       "      <td>1.079887e+06</td>\n",
       "      <td>7665.4</td>\n",
       "      <td>5959.4</td>\n",
       "      <td>3736.0</td>\n",
       "      <td>4060.7</td>\n",
       "      <td>1.214126e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9084 rows × 269 columns</p>\n",
       "</div></div>\n",
       "<div style=\"float: left; padding: 10px;\">\n",
       "        <h3>Target</h3><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sex</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11870</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11871</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11872</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11873</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11874</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9084 rows × 1 columns</p>\n",
       "</div></div>\n"
      ],
      "text/plain": [
       "       smri_thick_cort.destrieux_g.and.s.frontomargin.lh  \\\n",
       "0                                                  2.643   \n",
       "2                                                  2.798   \n",
       "4                                                  2.589   \n",
       "5                                                  2.417   \n",
       "6                                                  2.720   \n",
       "...                                                  ...   \n",
       "11870                                              2.604   \n",
       "11871                                              2.665   \n",
       "11872                                              2.517   \n",
       "11873                                              2.806   \n",
       "11874                                              2.817   \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.occipital.inf.lh  \\\n",
       "0                                                  2.597    \n",
       "2                                                  2.635    \n",
       "4                                                  2.495    \n",
       "5                                                  2.446    \n",
       "6                                                  2.937    \n",
       "...                                                  ...    \n",
       "11870                                              2.839    \n",
       "11871                                              2.915    \n",
       "11872                                              2.743    \n",
       "11873                                              2.835    \n",
       "11874                                              2.267    \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.paracentral.lh  \\\n",
       "0                                                 2.682   \n",
       "2                                                 2.620   \n",
       "4                                                 2.732   \n",
       "5                                                 2.370   \n",
       "6                                                 2.678   \n",
       "...                                                 ...   \n",
       "11870                                             2.642   \n",
       "11871                                             2.661   \n",
       "11872                                             2.607   \n",
       "11873                                             2.678   \n",
       "11874                                             2.639   \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.subcentral.lh  \\\n",
       "0                                                3.016   \n",
       "2                                                2.963   \n",
       "4                                                2.982   \n",
       "5                                                2.913   \n",
       "6                                                3.226   \n",
       "...                                                ...   \n",
       "11870                                            3.017   \n",
       "11871                                            3.114   \n",
       "11872                                            3.210   \n",
       "11873                                            3.344   \n",
       "11874                                            2.805   \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.transv.frontopol.lh  \\\n",
       "0                                                  2.776       \n",
       "2                                                  3.038       \n",
       "4                                                  2.979       \n",
       "5                                                  2.799       \n",
       "6                                                  3.058       \n",
       "...                                                  ...       \n",
       "11870                                              2.990       \n",
       "11871                                              2.968       \n",
       "11872                                              2.847       \n",
       "11873                                              2.975       \n",
       "11874                                              3.041       \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.cingul.ant.lh  \\\n",
       "0                                                3.012   \n",
       "2                                                2.948   \n",
       "4                                                2.953   \n",
       "5                                                2.958   \n",
       "6                                                3.185   \n",
       "...                                                ...   \n",
       "11870                                            3.119   \n",
       "11871                                            3.167   \n",
       "11872                                            2.954   \n",
       "11873                                            3.134   \n",
       "11874                                            2.867   \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.cingul.mid.ant.lh  \\\n",
       "0                                                  2.894     \n",
       "2                                                  2.966     \n",
       "4                                                  2.732     \n",
       "5                                                  3.063     \n",
       "6                                                  3.198     \n",
       "...                                                  ...     \n",
       "11870                                              3.014     \n",
       "11871                                              3.058     \n",
       "11872                                              2.965     \n",
       "11873                                              3.425     \n",
       "11874                                              2.906     \n",
       "\n",
       "       smri_thick_cort.destrieux_g.and.s.cingul.mid.post.lh  \\\n",
       "0                                                  2.874      \n",
       "2                                                  2.728      \n",
       "4                                                  2.819      \n",
       "5                                                  2.802      \n",
       "6                                                  2.848      \n",
       "...                                                  ...      \n",
       "11870                                              2.871      \n",
       "11871                                              2.976      \n",
       "11872                                              2.846      \n",
       "11873                                              3.251      \n",
       "11874                                              3.049      \n",
       "\n",
       "       smri_thick_cort.destrieux_g.cingul.post.dorsal.lh  \\\n",
       "0                                                  2.865   \n",
       "2                                                  3.263   \n",
       "4                                                  2.908   \n",
       "5                                                  3.296   \n",
       "6                                                  3.283   \n",
       "...                                                  ...   \n",
       "11870                                              3.240   \n",
       "11871                                              3.355   \n",
       "11872                                              3.211   \n",
       "11873                                              3.288   \n",
       "11874                                              3.440   \n",
       "\n",
       "       smri_thick_cort.destrieux_g.cingul.post.ventral.lh  ...  \\\n",
       "0                                                  2.350   ...   \n",
       "2                                                  1.882   ...   \n",
       "4                                                  2.967   ...   \n",
       "5                                                  2.461   ...   \n",
       "6                                                  2.422   ...   \n",
       "...                                                  ...   ...   \n",
       "11870                                              2.254   ...   \n",
       "11871                                              2.168   ...   \n",
       "11872                                              2.741   ...   \n",
       "11873                                              2.535   ...   \n",
       "11874                                              2.123   ...   \n",
       "\n",
       "       smri_vol_subcort.aseg_cc.central  \\\n",
       "0                                 403.0   \n",
       "2                                 371.1   \n",
       "4                                 414.5   \n",
       "5                                 327.6   \n",
       "6                                 296.0   \n",
       "...                                 ...   \n",
       "11870                             338.0   \n",
       "11871                             429.8   \n",
       "11872                             436.3   \n",
       "11873                             419.5   \n",
       "11874                             462.1   \n",
       "\n",
       "       smri_vol_subcort.aseg_cc.mid.anterior  \\\n",
       "0                                      396.9   \n",
       "2                                      336.7   \n",
       "4                                      398.6   \n",
       "5                                      310.4   \n",
       "6                                      403.1   \n",
       "...                                      ...   \n",
       "11870                                  366.9   \n",
       "11871                                  367.8   \n",
       "11872                                  472.6   \n",
       "11873                                  424.1   \n",
       "11874                                  417.5   \n",
       "\n",
       "       smri_vol_subcort.aseg_cc.anterior  smri_vol_subcort.aseg_wholebrain  \\\n",
       "0                                  546.9                      1.099494e+06   \n",
       "2                                  684.0                      1.444690e+06   \n",
       "4                                  824.5                      1.186497e+06   \n",
       "5                                  659.1                      1.047860e+06   \n",
       "6                                  873.3                      1.263524e+06   \n",
       "...                                  ...                               ...   \n",
       "11870                              761.9                      1.139532e+06   \n",
       "11871                              609.3                      1.134203e+06   \n",
       "11872                              855.6                      1.301402e+06   \n",
       "11873                              691.2                      1.150473e+06   \n",
       "11874                              863.2                      1.214126e+06   \n",
       "\n",
       "       smri_vol_subcort.aseg_latventricles  \\\n",
       "0                                   4693.2   \n",
       "2                                  13426.2   \n",
       "4                                  19138.9   \n",
       "5                                  16925.1   \n",
       "6                                  12905.8   \n",
       "...                                    ...   \n",
       "11870                              11129.1   \n",
       "11871                               2855.1   \n",
       "11872                               8278.4   \n",
       "11873                               6483.5   \n",
       "11874                               9234.5   \n",
       "\n",
       "       smri_vol_subcort.aseg_allventricles  \\\n",
       "0                                   6299.4   \n",
       "2                                  18810.3   \n",
       "4                                  21191.9   \n",
       "5                                  21032.6   \n",
       "6                                  14878.8   \n",
       "...                                    ...   \n",
       "11870                              14259.9   \n",
       "11871                               4925.1   \n",
       "11872                              10434.1   \n",
       "11873                               8978.0   \n",
       "11874                              11169.3   \n",
       "\n",
       "       smri_vol_subcort.aseg_intracranialvolume  \\\n",
       "0                                  1.354788e+06   \n",
       "2                                  1.703982e+06   \n",
       "4                                  1.561216e+06   \n",
       "5                                  1.415059e+06   \n",
       "6                                  1.514361e+06   \n",
       "...                                         ...   \n",
       "11870                              1.480336e+06   \n",
       "11871                              1.470497e+06   \n",
       "11872                              1.455727e+06   \n",
       "11873                              1.480286e+06   \n",
       "11874                              1.500072e+06   \n",
       "\n",
       "       smri_vol_subcort.aseg_supratentorialvolume  \\\n",
       "0                                    9.738411e+05   \n",
       "2                                    1.290405e+06   \n",
       "4                                    1.072113e+06   \n",
       "5                                    9.367869e+05   \n",
       "6                                    1.135326e+06   \n",
       "...                                           ...   \n",
       "11870                                1.001272e+06   \n",
       "11871                                9.897016e+05   \n",
       "11872                                1.172208e+06   \n",
       "11873                                1.040864e+06   \n",
       "11874                                1.079887e+06   \n",
       "\n",
       "       smri_vol_subcort.aseg_subcorticalgrayvolume  sex  \n",
       "0                                          54112.0    0  \n",
       "2                                          71188.0    1  \n",
       "4                                          61855.0    1  \n",
       "5                                          52886.0    1  \n",
       "6                                          65182.0    1  \n",
       "...                                            ...  ...  \n",
       "11870                                      59550.0    1  \n",
       "11871                                      61090.0    0  \n",
       "11872                                      64413.0    0  \n",
       "11873                                      55505.0    0  \n",
       "11874                                      59816.0    0  \n",
       "\n",
       "[9084 rows x 270 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data, test_data = data.test_split(size=.2, random_state=2)\n",
    "train_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ProblemSpec(n_jobs=16, scorer=['roc_auc'])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ps = bp.ProblemSpec(scorer=['roc_auc'],\n",
    "                    n_jobs=16)\n",
    "ps"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ModelPipeline\n",
      "-------------\n",
      "imputers=\\\n",
      "Imputer(obj='default')\n",
      "\n",
      "scalers=\\\n",
      "Scaler(obj='standard')\n",
      "\n",
      "model=\\\n",
      "Model(obj='dt')\n",
      "\n",
      "param_search=\\\n",
      "None\n",
      "\n"
     ]
    }
   ],
   "source": [
    "model_pipeline = bp.ModelPipeline(model=bp.Model('dt'))\n",
    "model_pipeline.print_all()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that the their are a few default values, specifically we have a set of default imputers, one for replacing all float variables with the mean value, and one for replacing all categorical / binary variables (if any, otherwise ignored) with the median values.\n",
    "\n",
    "Next, we have a just standard scaler, which scales all features to have mean 0, std of 1.\n",
    "\n",
    "Then, we have our decision tree.\n",
    "\n",
    "Lastly, we have no param_search specified."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have an initial model, we are ready to use the Evaluate function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d759f64987d34619bfddcd06e4a26e4b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Folds:   0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "BPtEvaluator\n",
       "------------\n",
       "mean_scores = {'roc_auc': 0.6416069711113249}\n",
       "std_scores = {'roc_auc': 0.010678367090234725}\n",
       "\n",
       "Saved Attributes: ['estimators', 'preds', 'timing', 'train_indices', 'val_indices', 'feat_names', 'ps', 'mean_scores', 'std_scores', 'weighted_mean_scores', 'scores', 'fis_', 'feature_importances_']\n",
       "\n",
       "Avaliable Methods: ['get_preds_dfs', 'get_fis', 'get_feature_importances', 'permutation_importance']\n",
       "\n",
       "Evaluated with:\n",
       "ProblemSpec(n_jobs=16, problem_type='binary',\n",
       "            scorer={'roc_auc': make_scorer(roc_auc_score, needs_threshold=True)},\n",
       "            subjects='all', target='sex')"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results = bp.evaluate(pipeline=model_pipeline,\n",
    "                      dataset=train_data,\n",
    "                      problem_spec=ps,\n",
    "                      cv=5)\n",
    "\n",
    "results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's try a just linear model now (Logistic Regression, since binary), updating our model within our model_pipeline first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b24ba47ba76247c1804f4492cc29fc4b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Folds:   0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "BPtEvaluator\n",
       "------------\n",
       "mean_scores = {'roc_auc': 0.903625961725159}\n",
       "std_scores = {'roc_auc': 0.004037404292329663}\n",
       "\n",
       "Saved Attributes: ['estimators', 'preds', 'timing', 'train_indices', 'val_indices', 'feat_names', 'ps', 'mean_scores', 'std_scores', 'weighted_mean_scores', 'scores', 'fis_', 'coef_']\n",
       "\n",
       "Avaliable Methods: ['get_preds_dfs', 'get_fis', 'get_coef_', 'permutation_importance']\n",
       "\n",
       "Evaluated with:\n",
       "ProblemSpec(n_jobs=16, problem_type='binary',\n",
       "            scorer={'roc_auc': make_scorer(roc_auc_score, needs_threshold=True)},\n",
       "            subjects='all', target='sex')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_pipeline.model = bp.Model('linear')\n",
    "\n",
    "results = bp.evaluate(pipeline=model_pipeline,\n",
    "                      dataset=train_data,\n",
    "                      problem_spec=ps,\n",
    "                      cv=5)\n",
    "\n",
    "results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "smri_vol_subcort.aseg_caudate.rh                   -0.645759\n",
       "smri_vol_subcort.aseg_thalamus.proper.lh           -0.421250\n",
       "smri_thick_cort.destrieux_g.postcentral.rh         -0.404056\n",
       "smri_vol_subcort.aseg_wholebrain                   -0.376275\n",
       "smri_vol_subcort.aseg_cerebellum.white.matter.rh   -0.365137\n",
       "                                                      ...   \n",
       "smri_vol_subcort.aseg_thalamus.proper.rh            0.360649\n",
       "smri_vol_subcort.aseg_putamen.rh                    0.449518\n",
       "smri_vol_subcort.aseg_cerebellum.cortex.rh          0.520414\n",
       "smri_vol_subcort.aseg_intracranialvolume            0.632200\n",
       "smri_vol_subcort.aseg_cerebral.white.matter.rh      1.045681\n",
       "Length: 269, dtype: float64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results.get_fis(mean=True).sort_values()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What we find here is a bit trivial. Basically just boys have bigger brains than girls ... That said, this is just an example. What if we say residualize in a nested way for intracranial volume?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ModelPipeline\n",
      "-------------\n",
      "imputers=\\\n",
      "Imputer(obj='default')\n",
      "\n",
      "scalers=\\\n",
      "[Scaler(obj='robust'),\n",
      " Scaler(obj=LinearResidualizer(to_resid_df=       smri_vol_subcort.aseg_intracranialvolume\n",
      "0                                  1.354788e+06\n",
      "2                                  1.703982e+06\n",
      "3                                  1.679526e+06\n",
      "4                                  1.561216e+06\n",
      "5                                  1.415059e+06\n",
      "...                                         ...\n",
      "11870                              1.480336e+06\n",
      "11871                              1.470497e+06\n",
      "11872                              1.455727e+06\n",
      "11873                              1.480286e+06\n",
      "11874                              1.500072e+06\n",
      "\n",
      "[11356 rows x 1 columns]))]\n",
      "\n",
      "model=\\\n",
      "Model(obj='linear')\n",
      "\n",
      "param_search=\\\n",
      "None\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from BPt.extensions import LinearResidualizer\n",
    "\n",
    "resid = LinearResidualizer(to_resid_df=data[['smri_vol_subcort.aseg_intracranialvolume']])\n",
    "resid_scaler = bp.Scaler(resid, scope='float')\n",
    "\n",
    "\n",
    "resid_pipeline = bp.ModelPipeline(scalers=[bp.Scaler('robust'), resid_scaler],\n",
    "                                  model=bp.Model('linear'))   \n",
    "\n",
    "resid_pipeline.print_all()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2a6874541abe4d16a8b2ece3644cd98f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Folds:   0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "BPtEvaluator\n",
       "------------\n",
       "mean_scores = {'roc_auc': 0.903625961725159}\n",
       "std_scores = {'roc_auc': 0.004037404292329663}\n",
       "\n",
       "Saved Attributes: ['estimators', 'preds', 'timing', 'train_indices', 'val_indices', 'feat_names', 'ps', 'mean_scores', 'std_scores', 'weighted_mean_scores', 'scores', 'fis_', 'coef_']\n",
       "\n",
       "Avaliable Methods: ['get_preds_dfs', 'get_fis', 'get_coef_', 'permutation_importance']\n",
       "\n",
       "Evaluated with:\n",
       "ProblemSpec(n_jobs=16, problem_type='binary',\n",
       "            scorer={'roc_auc': make_scorer(roc_auc_score, needs_threshold=True)},\n",
       "            subjects='all', target='sex')"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results = bp.evaluate(pipeline=model_pipeline,\n",
    "                      dataset=train_data,\n",
    "                      problem_spec=ps,\n",
    "                      cv=5)\n",
    "\n",
    "results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "smri_vol_subcort.aseg_caudate.rh                   -0.645759\n",
       "smri_vol_subcort.aseg_thalamus.proper.lh           -0.421250\n",
       "smri_thick_cort.destrieux_g.postcentral.rh         -0.404056\n",
       "smri_vol_subcort.aseg_wholebrain                   -0.376275\n",
       "smri_vol_subcort.aseg_cerebellum.white.matter.rh   -0.365137\n",
       "                                                      ...   \n",
       "smri_vol_subcort.aseg_thalamus.proper.rh            0.360649\n",
       "smri_vol_subcort.aseg_putamen.rh                    0.449518\n",
       "smri_vol_subcort.aseg_cerebellum.cortex.rh          0.520414\n",
       "smri_vol_subcort.aseg_intracranialvolume            0.632200\n",
       "smri_vol_subcort.aseg_cerebral.white.matter.rh      1.045681\n",
       "Length: 269, dtype: float64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results.get_fis(mean=True).sort_values()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notably residualizing is far from perfect (imo garbage...), it is interesting though how the results change when we add the residualization. We can just ignore the issue for now, and explore some different pipelines (not residualizing anymore). We are going to just try some off the shelf default pipelines for simplicity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ac1011df4a7a4cb58ac0585c54a34ada",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Folds:   0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "BPtEvaluator\n",
       "------------\n",
       "mean_scores = {'roc_auc': 0.8863269603808108}\n",
       "std_scores = {'roc_auc': 0.0027329159182744186}\n",
       "\n",
       "Saved Attributes: ['estimators', 'preds', 'timing', 'train_indices', 'val_indices', 'feat_names', 'ps', 'mean_scores', 'std_scores', 'weighted_mean_scores', 'scores', 'fis_', 'feature_importances_']\n",
       "\n",
       "Avaliable Methods: ['get_preds_dfs', 'get_fis', 'get_feature_importances', 'permutation_importance']\n",
       "\n",
       "Evaluated with:\n",
       "ProblemSpec(n_jobs=16, problem_type='binary',\n",
       "            scorer={'roc_auc': make_scorer(roc_auc_score, needs_threshold=True)},\n",
       "            subjects='all', target='sex')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from BPt.default.pipelines import pipelines\n",
    "\n",
    "results = bp.evaluate(pipeline=pipelines['lgbm_pipe'],\n",
    "                      dataset=train_data,\n",
    "                      problem_spec=ps,\n",
    "                      cv=5)\n",
    "results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pipeline(steps=[Imputer(obj='mean', scope='float'),\n",
       "                Imputer(obj='median', scope='category'), Scaler(obj='robust'),\n",
       "                Transformer(obj='one hot encoder', scope='category'),\n",
       "                Model(obj='lgbm',\n",
       "                      param_search=ParamSearch(cv=CV(cv_strategy=CVStrategy()),\n",
       "                                               n_iter=60),\n",
       "                      params=1)])"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pipelines['lgbm_pipe']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9c0795fae4dd4b83b87c0ba432c119fa",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Folds:   0%|          | 0/3 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "BPtEvaluator\n",
       "------------\n",
       "mean_scores = {'roc_auc': 0.8589750730819228}\n",
       "std_scores = {'roc_auc': 0.003731209094578198}\n",
       "\n",
       "Saved Attributes: ['estimators', 'preds', 'timing', 'train_indices', 'val_indices', 'feat_names', 'ps', 'mean_scores', 'std_scores', 'weighted_mean_scores', 'scores']\n",
       "\n",
       "Avaliable Methods: ['get_preds_dfs', 'permutation_importance']\n",
       "\n",
       "Evaluated with:\n",
       "ProblemSpec(n_jobs=16, problem_type='binary',\n",
       "            scorer={'roc_auc': make_scorer(roc_auc_score, needs_threshold=True)},\n",
       "            subjects='all', target='sex')"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# User cv=3 for runtime reasons\n",
    "results = bp.evaluate(pipeline=pipelines['stacking_pipe'],\n",
    "                      dataset=train_data,\n",
    "                      problem_spec=ps,\n",
    "                      cv=3)\n",
    "results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pipeline(steps=[Imputer(obj='mean', scope='float'),\n",
       "                Imputer(obj='median', scope='category'), Scaler(obj='robust'),\n",
       "                Transformer(obj='one hot encoder', scope='category'),\n",
       "                Ensemble(base_model=Model(obj='ridge',\n",
       "                                          param_search=ParamSearch(cv=CV(cv_strategy=CVStrategy()),\n",
       "                                                                   n_iter=60),\n",
       "                                          params=1),\n",
       "                         models=[Model(obj='elastic',\n",
       "                                       param_search=ParamSearch(cv=CV(cv_strategy=CVS...\n",
       "                                       param_search=ParamSearch(cv=CV(cv_strategy=CVStrategy()),\n",
       "                                                                n_iter=60),\n",
       "                                       params=1),\n",
       "                                 Model(obj=Pipeline(param_search=ParamSearch(cv=CV(cv_strategy=CVStrategy()),\n",
       "                                                                             n_iter=60),\n",
       "                                                    steps=[FeatSelector(obj='univariate '\n",
       "                                                                            'selection',\n",
       "                                                                        params=2),\n",
       "                                                           Model(obj='svm',\n",
       "                                                                 params=1)])),\n",
       "                                 Model(obj='lgbm',\n",
       "                                       param_search=ParamSearch(cv=CV(cv_strategy=CVStrategy()),\n",
       "                                                                n_iter=60),\n",
       "                                       params=1)],\n",
       "                         n_jobs_type='models', obj='stacking')])"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pipelines['stacking_pipe']"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.1 64-bit ('bpt': conda)",
   "language": "python",
   "name": "python39164bitbptconda7805b3f5d58e4b658b79cb94739371e6"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
