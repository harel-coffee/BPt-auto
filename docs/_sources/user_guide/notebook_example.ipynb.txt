{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.1-final"
  },
  "orig_nbformat": 2,
  "kernelspec": {
   "name": "python39164bitbptconda7805b3f5d58e4b658b79cb94739371e6",
   "display_name": "Python 3.9.1 64-bit ('bpt': conda)",
   "language": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "source": [
    "# General BPt Usage Example\n",
    "\n",
    "\n",
    "This page is written as a jupyter notebook."
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import BPt as bp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = bp.Dataset()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   1\n",
       "0  1\n",
       "1  2\n",
       "2  3"
      ],
      "text/html": "<div style=\"float: left; padding: 10px;\">\n        <h3>Data</h3><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div></div>\n"
     },
     "metadata": {},
     "execution_count": 3
    }
   ],
   "source": [
    "data['1'] = [1, 2, 3]\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   1\n",
       "0  1\n",
       "1  2\n",
       "2  3"
      ],
      "text/html": "<div style=\"float: left; padding: 10px;\">\n        <h3>Data</h3><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th style=\"background: RGBA(176, 224, 230, .25)\">0</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th style=\"background: RGBA(249, 121, 93, .25)\">1</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th style=\"background: RGBA(176, 224, 230, .25)\">2</th>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n<p style=\"margin-top: .35em\"><span style=\"background: RGBA(176, 224, 230, .25)\">2 rows × 1 columns - Train Set </span></p><p style=\"margin-top: .35em\"><span style=\"background: RGBA(249, 121, 93, .25)\">1 rows × 1 columns - Test Set </span></p></div></div>\n"
     },
     "metadata": {},
     "execution_count": 4
    }
   ],
   "source": [
    "data.set_test_split(.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ]
}